/* Listes de taxons */
truncate table taxonomie.bib_listes restart identity cascade
;

insert into taxonomie.bib_listes(id_liste, nom_liste, desc_liste, picto, regne, group2_inpn)
values (1500, 'Oiseaux de mon jardin', '<h1>An eum discere ea mavis, quae cum plane perdidiceriti nihil sciat?</h1>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cum ageremus, inquit, vitae beatum et eundem supremum diem, scribebamus haec. Idem etiam dolorem saepe perpetiuntur, ne, si id non faciant, incidant in maiorem. </p>

<p><i>Nemo igitur esse beatus potest.</i> <code>Recte dicis;</code> Duo Reges: constructio interrete. <b>Cur deinde Metrodori liberos commendas?</b> <a href="http://loripsum.net/" target="_blank">Respondent extrema primis, media utrisque, omnia omnibus.</a> Quid ergo hoc loco intellegit honestum? <code>At ille pellit, qui permulcet sensum voluptate.</code> Innumerabilia dici possunt in hanc sententiam, sed non necesse est. </p>

<blockquote cite="http://loripsum.net">
	Quis nostrum dixerit, quos non pudet ea, quae Stoici aspera dicunt, mala dicere, melius esse turpiter aliquid facere cum voluptate quam honeste cum dolore?
</blockquote>


<pre>Elicerem ex te cogeremque, ut responderes, nisi vererer ne
Herculem ipsum ea, quae pro salute gentium summo labore
gessisset, voluptatis causa gessisse diceres.

Si autem id non concedatur, non continuo vita beata
tollitur.
</pre>


<p><b>Quis enim redargueret?</b> Idem iste, inquam, de voluptate quid sentit? Est igitur officium eius generis, quod nec in bonis ponatur nec in contrariis. Eam tum adesse, cum dolor omnis absit; <code>Et nemo nimium beatus est;</code> At negat Epicurus-hoc enim vestrum lumen estquemquam, qui honeste non vivat, iucunde posse vivere. </p>

<ul>
	<li>At ego quem huic anteponam non audeo dicere;</li>
	<li>Quibus rebus vita consentiens virtutibusque respondens recta et honesta et constans et naturae congruens existimari potest.</li>
	<li>Huius ego nunc auctoritatem sequens idem faciam.</li>
	<li>Consequatur summas voluptates non modo parvo, sed per me nihilo, si potest;</li>
</ul>


<dl>
	<dt><dfn>Pollicetur certe.</dfn></dt>
	<dd>Itaque eos id agere, ut a se dolores, morbos, debilitates repellant.</dd>
	<dt><dfn>Restatis igitur vos;</dfn></dt>
	<dd>Sin eam, quam Hieronymus, ne fecisset idem, ut voluptatem illam Aristippi in prima commendatione poneret.</dd>
	<dt><dfn>Eam stabilem appellas.</dfn></dt>
	<dd>Et si turpitudinem fugimus in statu et motu corporis, quid est cur pulchritudinem non sequamur?</dd>
	<dt><dfn>Tenent mordicus.</dfn></dt>
	<dd>Cur tantas regiones barbarorum pedibus obiit, tot maria transmisit?</dd>
</dl>


<ol>
	<li>Quid enim est a Chrysippo praetermissum in Stoicis?</li>
	<li>Ita multa dicunt, quae vix intellegam.</li>
	<li>Alterum significari idem, ut si diceretur, officia media omnia aut pleraque servantem vivere.</li>
	<li>Cupit enim dícere nihil posse ad beatam vitam deesse sapienti.</li>
</ol>', 'images/pictos/oiseau.gif', 'Animalia', 'Oiseaux')
;

insert into taxonomie.bib_listes(id_liste, nom_liste, desc_liste, picto, regne, group2_inpn)
values (55
       , 'Ces oiseaux colorés'
       , '<h1>Honesta oratio, Socratica, Platonis etiam.</h1>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <a href="http://loripsum.net/" target="_blank">Erit enim mecum, si tecum erit.</a> Ergo ita: non posse honeste vivi, nisi honeste vivatur? Nam ante Aristippus, et ille melius. <b>Tum Triarius: Posthac quidem, inquit, audacius.</b> </p>

<pre>Iam ille sorites, quo nihil putatis esse vitiosius: quod
bonum sit, id esse optabile, quod optabile, id expetendum,
quod expetendum, id laudabile, deinde reliqui gradus.

Quasi vero, inquit, perpetua oratio rhetorum solum, non
etiam philosophorum sit.
</pre>


<blockquote cite="http://loripsum.net">
	Placet igitur tibi, Cato, cum res sumpseris non concessas, ex illis efficere, quod velis?
</blockquote>


<h2>Si id dicis, vicimus.</h2>

<p>Hoc mihi cum tuo fratre convenit. Neque solum ea communia, verum etiam paria esse dixerunt. Unum est sine dolore esse, alterum cum voluptate. <a href="http://loripsum.net/" target="_blank">Quid iudicant sensus?</a> Quis istud possit, inquit, negare? Nihilne te delectat umquam -video, quicum loquar-, te igitur, Torquate, ipsum per se nihil delectat? </p>

<ol>
	<li>Igitur ne dolorem quidem.</li>
	<li>Sine ea igitur iucunde negat posse se vivere?</li>
	<li>Coniunctio autem cum honestate vel voluptatis vel non dolendi id ipsum honestum, quod amplecti vult, id efficit turpe.</li>
</ol>


<ul>
	<li>Et hercule-fatendum est enim, quod sentio -mirabilis est apud illos contextus rerum.</li>
	<li>Sapiens autem semper beatus est et est aliquando in dolore;</li>
	<li>Illa videamus, quae a te de amicitia dicta sunt.</li>
	<li>Ita prorsus, inquam;</li>
</ul>


<dl>
	<dt><dfn>Quid enim?</dfn></dt>
	<dd>Haec igitur Epicuri non probo, inquam.</dd>
	<dt><dfn>Tenent mordicus.</dfn></dt>
	<dd>Sed utrum hortandus es nobis, Luci, inquit, an etiam tua sponte propensus es?</dd>
	<dt><dfn>Venit ad extremum;</dfn></dt>
	<dd>Itaque ab his ordiamur.</dd>
	<dt><dfn>Pollicetur certe.</dfn></dt>
	<dd>Ut in geometria, prima si dederis, danda sunt omnia.</dd>
	<dt><dfn>Si quae forte-possumus.</dfn></dt>
	<dd>Illum mallem levares, quo optimum atque humanissimum virum, Cn.</dd>
</dl>


<p>Duo Reges: constructio interrete. <a href="http://loripsum.net/" target="_blank">Utilitatis causa amicitia est quaesita.</a> Iubet igitur nos Pythius Apollo noscere nosmet ipsos. Haec quo modo conveniant, non sane intellego. Sed ad haec, nisi molestum est, habeo quae velim. Graece donan, Latine voluptatem vocant. Quia voluptatem hanc esse sentiunt omnes, quam sensus accipiens movetur et iucunditate quadam perfunditur. Itaque contra est, ac dicitis; Quid igitur dubitamus in tota eius natura quaerere quid sit effectum? </p>'
       , 'images/pictos/oiseau.gif'
       , 'Animalia'
       , 'Oiseaux')
;

insert into taxonomie.bib_listes(id_liste, nom_liste, desc_liste, picto, regne, group2_inpn)
values (56
       , 'Mammifères de mon jardin'
       , '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <b>At, si voluptas esset bonum, desideraret.</b> Quos quidem tibi studiose et diligenter tractandos magnopere censeo. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres. Duo Reges: constructio interrete. An me, inquam, nisi te audire vellem, censes haec dicturum fuisse? Itaque quantum adiit periculum! ad honestatem enim illum omnem conatum suum referebat, non ad voluptatem. Quid me istud rogas? Idem adhuc; </p>

<p>Eadem nunc mea adversum te oratio est. Piso, familiaris noster, et alia multa et hoc loco Stoicos irridebat: Quid enim? Terram, mihi crede, ea lanx et maria deprimet. Hoc Hieronymus summum bonum esse dixit. </p>

<p><b>Confecta res esset.</b> Hoc est non modo cor non habere, sed ne palatum quidem. Haec bene dicuntur, nec ego repugno, sed inter sese ipsa pugnant. <a href="http://loripsum.net/" target="_blank">Age, inquies, ista parva sunt.</a> Quamquam in hac divisione rem ipsam prorsus probo, elegantiam desidero. <a href="http://loripsum.net/" target="_blank">At hoc in eo M.</a> Iis igitur est difficilius satis facere, qui se Latina scripta dicunt contemnere. <i>Ita graviter et severe voluptatem secrevit a bono.</i> </p>'
       , 'images/pictos/mammifere.gif'
       , 'Animalia'
       , 'Mammifères')
;

/* Listes des taxons */

truncate taxonomie.bib_noms
restart identity cascade
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (1, 3582, 3582, 'Guêpier d''Europe', 'dsfsdf')
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (2, 3590, 3590, 'Huppe fasciée', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (3, 61153, 61153, 'Écureuil roux', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (4, 60015, 60015, 'Hérisson d''Europe', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (5, 3571, 3571, 'Martin-pêcheur d''Europe', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (6, 3760, 534742, 'Mésange bleue', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (7, 3764, 3764, 'Mésange charbonnière', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (8, 4117, 4117, 'Merle noir', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (9, 4001, 4001, 'Rougegorge familier', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (10, 4035, 4035, 'Rougequeue noir', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (11, 4040, 4040, 'Rougequeue à front blanc', null)
;

insert into taxonomie.bib_noms(id_nom, cd_nom, cd_ref, nom_francais, comments)
values (12, 534742, 534742, 'Mésange bleue', null)
;

/* correspondances especes <> listes */
truncate table taxonomie.cor_nom_liste
restart identity cascade
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (55, 1)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (55, 2)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (56, 3)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (56, 4)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (1500, 9)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (1500, 10)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (1500, 11)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (1500, 12)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (1500, 7)
;

insert into taxonomie.cor_nom_liste(id_liste, id_nom)
values (1500, 8)
;

/* Users (pwd = username) */
truncate table gnc_core.t_users
restart identity cascade
;


insert into gnc_core.t_users(id_user
                            , name
                            , surname
                            , username
                            , password
                            , email
                            , phone
                            , organism
                            , admin
                            , timestamp_create)
values (1
       , 'user'
       , '1'
       , 'user1'
       , '$pbkdf2-sha256$29000$4/w/Z2wt5by31rq39r73fg$SNetk3yBXp8T0CH2K4/Ye04RnqCcn410KcxIUlqUeJo'
       , 'user1@tld.com'
       , null
       , null
       , false
       , now())
     , (2
       , 'user'
       , '3'
       , 'user3'
       , '$pbkdf2-sha256$29000$zlnL2XvvXUsJIWRMSek9Bw$DN2qj12jBDy/l.btaJP0pHjWuT0az2fgGufKjjqOLEs'
       , 'user3@tld.com'
       , null
       , null
       , false
       , now())
     , (3
       , 'user'
       , '2'
       , 'user2'
       , '$pbkdf2-sha256$29000$qjWGcE5prfX.H6MUgjAGYA$796GxjUwZYdQc7rDVeL0fOP3NjOrYfBaKZMGX0FFdRo'
       , 'user2@tld.com'
       , null
       , null
       , false
       , now())
     , (4
       , 'ad'
       , 'min'
       , 'admin'
       , '$pbkdf2-sha256$29000$wvhfa631XquVkjKmtBYCIA$mCSoZmxwpUAMdokfSy/cdUgy0OQ1XSBH3jfVoGQwBuI'
       , 'admin@tld.com'
       , null
       , null
       , true
       , now())
;

/* Modules */
truncate table gnc_core.t_modules
restart identity cascade
;

insert into gnc_core.t_modules(id_module, name, label, "desc", icon, timestamp_create)
values (1, 'observations', 'Observez la faune', 'Observation de faune diverse et variée', null, now())
;


/* Programs */

truncate table gnc_core.t_programs
restart identity cascade
;

insert into gnc_core.t_programs(id_program
                               , title
                               , short_desc
                               , long_desc
                               , image
                               , logo
                               , module
                               , taxonomy_list
                               , geom
                               , timestamp_create)
values (1
       , 'Mon premier programme'
       , 'Premier programme de GeoNature-citizen'
       , '<h1> Long Description</h1> <p>jkll kjlk jlkj lkj lkjl j</p>'
       , null
       , null
       , 1
       , 55
geometry
       , now())
     , (2
       , 'Mares de la Métro'
       , 'Inventaire des mares de la Métro de Grenoble'
       , '<h1> Long Description</h1> <p>jkll kjlk jlkj lkj lkjl j</p>'
       , null
       , null
       , 1
       , 1500
geometry
       , now())
     , (3
       , 'ABC de Chazeaux'
       , 'Inventaire participatif sur Chazeaux'
       , 'Inventaire participatif sur Chazeaux'
       , null
       , null
       , 1
       , 55
       , '0106000020E610000001000000010300000001000000100000004C9570A0561A1140099F004B8B4C4640DE0E7AFB0B2B114045783749844D464000B8E16880321140D07D20A86B4D46401ACC678BA23411408D42535A3B4D4640BCF25395DC381140123F4560564D46405D6EEA9C7C39114006144301054D46402F8E95C5E04211402C296B74A74C4640BE89A5928B4611401B4688BA6C4B46404D9D76B462451140C062DCD5394B46404C38D848EA3A11407ACD44A5654B464087A033CBEA3211407F3F5719D84A4640661E65CF642D1140BC6961C0C34A4640D5BB6A5E9C2811403ECF527CEC4A46404EE7A4CDAA2911406BA2C699444B4640481978268B251140B052BF99004C46404C9570A0561A1140099F004B8B4C4640' :: geometry
       , now())
;

/* Observations */
-- SOURCE: https://trac.osgeo.org/postgis/wiki/UserWikiRandomPoint#RandomPointsinPolygon
create or replace function RandomPointsInPolygon(geom geometry, num_points integer)
  returns setof geometry as
$BODY$declare
  target_proportion numeric;

  n_ret             integer := 0;

  loops             integer := 0;

  x_min             float8;

  y_min             float8;

  x_max             float8;

  y_max             float8;

  srid              integer;

  rpoint            geometry;

begin
  -- Get envelope and SRID of source polygon
  select ST_XMin(geom), ST_YMin(geom), ST_XMax(geom), ST_YMax(geom), ST_SRID(geom)
      into x_min, y_min, x_max, y_max, srid
  ;

  -- Get the area proportion of envelope size to determine if a
  -- result can be returned in a reasonable amount of time
  select ST_Area(geom) / ST_Area(ST_Envelope(geom)) into target_proportion
  ;

  raise debug 'geom: SRID %, NumGeometries %, NPoints %, area proportion within envelope %',
  srid, ST_NumGeometries(geom), ST_NPoints(geom),
  round(100.0 * target_proportion, 2) || '%'
  ;

  if target_proportion < 0.0001
  then
    raise exception 'Target area proportion of geometry is too low (%)',
    100.0 * target_proportion || '%'
    ;
  end if
  ;

  raise debug 'bounds: % % % %', x_min, y_min, x_max, y_max
  ;

  while n_ret < num_points loop
    loops := loops + 1
  ;

    select ST_SetSRID(ST_MakePoint(random() * (x_max - x_min) + x_min,
                                   random() * (y_max - y_min) + y_min),
                      srid) into rpoint
  ;

    if ST_Contains(geom, rpoint)
    then
      n_ret := n_ret + 1
      ;

      return next rpoint
      ;
    end if
  ;

  end loop
  ;

  raise debug 'determined in % loops (% efficiency)', loops, round(100.0 * num_points / loops, 2) || '%'
  ;

end$BODY$
language plpgsql
volatile
cost 100
rows 1000
;

-- ALTER FUNCTION RandomPointsInPolygon(geometry, integer) OWNER TO postgres;

truncate table gnc_obstax.t_obstax
restart identity cascade
;

insert into gnc_obstax.t_obstax(uuid_sinp, id_program, cd_nom, date, id_role, count, timestamp_create, geom)

with g as (select row_number()
    over (
      order by random) as id
                , id_program
                , geom
           from (
                select id_program
                     , RandomPointsInPolygon((ST_Dump(ST_SetSRID((st_makevalid(geom)), 4326))).geom,
                                             50) as geom
                     , random() as random
                from gnc_core.t_programs) as t)
    , d as (select row_number()
    over () as id
                 , t.*
            from (
                 select bib_noms.cd_nom
                      , (timestamp '2018-06-01' +
                         random() * (timestamp '2018-12-11 20:00:00' -
                                     timestamp '2018-06-01 10:00:00')) :: date as date
                      , t_users.id_user
                      , floor(random() * 10 + 1) :: int as count
                      , now() as now
                     --         , (
                     --             select RandomPointsInPolygon((ST_Dump(ST_SetSRID((
                     --                                                                select st_union(st_makevalid(geom)) geom
                     --                                                                from gnc_core.t_programs), 4326))).geom, 1)
                     --             limit 1)                                             as geom
                      , random() as random
                 from generate_series(1, 500)
                        cross join taxonomie.bib_noms
                        cross join gnc_core.t_users
                 order by random()
                 limit 500) as t)
select uuid_generate_v4()
     , g.id_program
     , d.cd_nom
     , d.date
     , d.id_user
     , d.count
     , d.now
     , g.geom
from d, g
where d.id = g.id
;
