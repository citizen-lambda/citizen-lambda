import { environment } from '../environments/environment';


export const AppConfig = {
  appName: 'Citizen-lambda',
  // API_ENDPOINT: 'http://localhost:5002/api',
  API_ENDPOINT: environment.production ? 'http://localhost:5002/api' : 'http://localhost:4200/api',
  FRONTEND: {
    PROD_MOD: true,
    DISPLAY_FOOTER: true
  },
  URL_APPLICATION: 'http://localhost:4200',
  REWARDS: true,
  SEO: {
    description: {  // up to 156 characters
      fr: 'geonature-citizen est une application de sciences participatives à la biodiversité.',
      en: 'geonature-citizen is an application of participatory biodiversity sciences.'
    },
    keywords: {
      fr: 'biodiversité, sciences participatives, occurence de taxon, application web',
      en: 'participatory science, biodiversity, taxon occurence, webapp, biodiversity software'
    },
    author: 'geonature-citizen contributors'
  },
  termsOfUse: {
    fr: 'assets/cgu.pdf',
    en: 'assets/termsOfUse.pdf'
  },
  platform_intro: {
    fr: 'Bienvenue<br /> sur GeoNature Citizen',
    en: 'Welcome<br /> on GeoNature Citizen'
  },
  platform_greeter: {
    fr:
      // tslint:disable-next-line: max-line-length
      'Hae duae provinciae bello quondam piratico catervis mixtae praedonum a Servilio pro consule missae sub iugum factae sunt vectigales. et hae quidem regiones velut in prominenti terrarum lingua positae ob orbe eoo monte Amano disparantur.',
    en:
      // tslint:disable-next-line: max-line-length
      'Hae duae provinciae bello quondam piratico catervis mixtae praedonum a Servilio pro consule missae sub iugum factae sunt vectigales. et hae quidem regiones velut in prominenti terrarum lingua positae ob orbe eoo monte Amano disparantur.'
  },
  platform_participate: {
    fr: 'PARTICIPER AU PROGRAMME',
    en: 'PARTICIPATE'
  },
  program_share_an_observation: {
    fr: 'PARTAGER UNE OBSERVATION',
    en: 'SHARE AN OBSERVATION'
  },
  program_add_an_observation: {
    fr: 'AJOUTER UNE OBSERVATION',
    en: 'CONTRIBUTE AN OBSERVATION'
  },
  taxonSelectInputThreshold: 0,
  taxonAutocompleteInputThreshold: 0,
  taxonAutocompleteFields: ['nom_complet', 'nom_vern', 'nom_vern_eng', 'cd_nom'],
  program_list_sort: '-timestamp_create',
  programsMasonryTreshold: 7,
  OBSERVATIONS_FEATURES: {
    TAXONOMY: {
      GROUP: (localeId: string): string => {
        return localeId.startsWith('fr') ? 'group2_inpn' : 'classe';
      }
    }
}
};
